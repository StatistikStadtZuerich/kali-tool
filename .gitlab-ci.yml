default:
  image: $CI_REGISTRY/docker-hub-proxy/rocker/tidyverse:4.3.2

variables:
  CONTAINER_REGISTRY: $CI_REGISTRY
  CONTAINER_REGISTRY_USERNAME: $CI_REGISTRY_USER
  CONTAINER_REGISTRY_PASSWORD: $CI_REGISTRY_PASSWORD
  CONTAINER_REPOSITORY: $SWID
  CONTAINER_IMAGE_NAME: $CI_PROJECT_NAME # used for container image name
  COMPONENT_NAME: $CI_PROJECT_NAME # used for component name (alias name) in umbrella chart
  GIT_STRATEGY: fetch
  RENV_PATHS_CACHE: ${CI_PROJECT_DIR}/renv/cache


cache:
  key: ${CI_PROJECT_NAME}
  paths:
    - ${RENV_PATHS_CACHE}

stages:
  - restore
  - deploy_test
  - deploy_prod

renv-restore-job:
  stage: restore
  script:
    - Rscript -e "renv::restore()"
    rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy-job-test:
  # ausgeführt wenn push in merge request
  stage: deploy_test
  needs: 
    - renv-restore-job
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  variables:
    APP_NAME: $TEST_NAME
  script:
    - Rscript -e "source('data-raw/create_latest_data.R')"
    - Rscript -e "source('dev/deploy.R')"

deploy-job-prod:
  # ausgeführt wenn Push auf Main branch
  stage: deploy_prod
  needs: 
    - renv-restore-job
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  variables:
    APP_NAME: $PROD_NAME
  script:
    - Rscript -e "packageVersion('rsconnect')"
    - Rscript -e "source('data-raw/create_latest_data.R')"
    - Rscript -e "source('dev/deploy.R')"
